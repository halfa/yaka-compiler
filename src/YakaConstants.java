/* Generated By:JavaCC: Do not edit this line. YakaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface YakaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEEN = 8;
  /** RegularExpression Id. */
  int VAR = 9;
  /** RegularExpression Id. */
  int FAIRE = 10;
  /** RegularExpression Id. */
  int SINON = 11;
  /** RegularExpression Id. */
  int POUR = 12;
  /** RegularExpression Id. */
  int SI = 13;
  /** RegularExpression Id. */
  int FSI = 14;
  /** RegularExpression Id. */
  int ENTIER = 15;
  /** RegularExpression Id. */
  int RETOURNE = 16;
  /** RegularExpression Id. */
  int VRAI = 17;
  /** RegularExpression Id. */
  int TANTQUE = 18;
  /** RegularExpression Id. */
  int CONST = 19;
  /** RegularExpression Id. */
  int FAUX = 20;
  /** RegularExpression Id. */
  int FAIT = 21;
  /** RegularExpression Id. */
  int OU = 22;
  /** RegularExpression Id. */
  int ET = 23;
  /** RegularExpression Id. */
  int NON = 24;
  /** RegularExpression Id. */
  int FONCTION = 25;
  /** RegularExpression Id. */
  int FFONCTION = 26;
  /** RegularExpression Id. */
  int PROGRAMME = 27;
  /** RegularExpression Id. */
  int FPROGRAMME = 28;
  /** RegularExpression Id. */
  int PRINCIPAL = 29;
  /** RegularExpression Id. */
  int FPRINCIPAL = 30;
  /** RegularExpression Id. */
  int ALORS = 31;
  /** RegularExpression Id. */
  int ECRIRE = 32;
  /** RegularExpression Id. */
  int LIRE = 33;
  /** RegularExpression Id. */
  int ALALIGNE = 34;
  /** RegularExpression Id. */
  int chiffre = 35;
  /** RegularExpression Id. */
  int entier = 36;
  /** RegularExpression Id. */
  int lettre = 37;
  /** RegularExpression Id. */
  int ident = 38;
  /** RegularExpression Id. */
  int chaine = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"(*\"",
    "<token of kind 6>",
    "\"*)\"",
    "\"BOOLEEN\"",
    "\"VAR\"",
    "\"FAIRE\"",
    "\"SINON\"",
    "\"POUR\"",
    "\"SI\"",
    "\"FSI\"",
    "\"ENTIER\"",
    "\"RETOURNE\"",
    "\"VRAI\"",
    "\"TANTQUE\"",
    "\"CONST\"",
    "\"FAUX\"",
    "\"FAIT\"",
    "\"OU\"",
    "\"ET\"",
    "\"NON\"",
    "\"FONCTION\"",
    "\"FFONCTION\"",
    "\"PROGRAMME\"",
    "\"FPROGRAMME\"",
    "\"PRINCIPAL\"",
    "\"FPRINCIPAL\"",
    "\"ALORS\"",
    "\"ECRIRE\"",
    "\"LIRE\"",
    "\"ALALIGNE\"",
    "<chiffre>",
    "<entier>",
    "<lettre>",
    "<ident>",
    "<chaine>",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
